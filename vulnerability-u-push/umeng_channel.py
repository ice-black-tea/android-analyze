import frida, sys

process_name = "com.umeng.message.example:channel"

jscode = """
Java.perform(function () {
    var Exception = Java.use("java.lang.Exception");
    var PushAgent = Java.use("com.umeng.message.PushAgent");

    var AgooFactory = Java.use("org.android.agoo.control.AgooFactory");
    AgooFactory.parseEncryptedMsg.implementation = function(str) {
        send("AgooFactory.parseEncryptedMsg  " + str);
        return this.parseEncryptedMsg(str);
    }

    var b = Java.use("org.android.agoo.common.b");
    b.a.overload('[B', '[B').implementation = function(bytes1, bytes2) {
        send("b.a.overload('[B', '[B')");
        return this.a(bytes1, bytes2);
    }

    b.a.overload('[B', 'javax.crypto.spec.SecretKeySpec', '[B').implementation = function() {
        send("b.a.overload('[B', 'javax.crypto.spec.SecretKeySpec', '[B')  " + arguments[0]);
        return this.a(arguments[0], arguments[1], arguments[2]);
    }

    var BaseIntentService = Java.use("org.android.agoo.control.BaseIntentService");
    BaseIntentService.handleRemoteMessage.implementation = function(context, intent) {
        send("BaseIntentService.handleRemoteMessage  " + intent);
        PushAgent.getInstance(context).setDebugMode(true);
        this.handleRemoteMessage(context, intent);
    }

    var UmengIntentService = Java.use("com.umeng.message.UmengIntentService");
    UmengIntentService.onMessage.implementation = function(context, intent) {
        send("UmengIntentService.onMessage" + intent.getStringExtra("body"));
        this.onMessage(context, intent);
    }

    UmengIntentService.startService.implementation = function(intent) {
        send("UmengIntentService.startService  " + intent);
        return this.startService(intent);
    }

    var UMessage = Java.use("com.umeng.message.entity.UMessage");
    UMessage.$init.implementation = function(obj) {
        send("UMessage.$init  " + obj.toString());
        this.$init(obj);
    }

    var UmengMessageDeviceConfig = Java.use("com.umeng.message.common.UmengMessageDeviceConfig");
    UmengMessageDeviceConfig.isServiceWork.implementation = function(arg5, arg6, arg7) {
        var ret = this.isServiceWork(arg5, arg6, arg7);
        send("UmengMessageDeviceConfig.isServiceWork -> " + ret + " (" + arg6 + ", " + arg7 + ")");
        if (arg6 == "com.umeng.message.UmengDownloadResourceService") {
            return false;
        }
        return ret;
    }
});
"""

def on_message(message, data):
    if message['type'] == 'send':
        print("[*] {0}".format(message['payload']))
    else:
        print(message)

process = frida.get_usb_device().attach(process_name)
script = process.create_script(jscode)
script.on('message', on_message)
print('[*] Running ...')
script.load()
sys.stdin.read()
